-- In the global file of your game, simply add this line
-- #include main
-- Then, in Atom package settings, go to the TTS package and define the path
-- to this folder. Since this main file already includes the others no further
-- operation is required for scripts. The XML needs to be copied manually
-- however.

#include scripts/data/data_settings
#include scripts/data/data_tables
#include scripts/data/data_terrain
#include scripts/data/data_troops
#include scripts/data/data_troops_greek_successors
#include scripts/data/data_armies_book_I
#include scripts/data/data_armies_book_II
#include scripts/data/data_armies_book_III
#include scripts/data/data_armies_book_IV
#include scripts/log
#include scripts/utilities_lua
#include scripts/utilities
#include scripts/logic_terrain
#include scripts/logic_gizmos
#include scripts/logic_spawn_army
#include scripts/logic_dead
#include scripts/logic_dice
#include scripts/logic
#include scripts/uievents
History = require('../dbx_tts/History')

function onload()
    Logger.info('----------------------------------------------')
    Logger.info('                       DBA 2.2 v1.25.0 ')
    Logger.info('----------------------------------------------\n\nCheck the Notebook for instructions.')

    Wait.time(main_loop, g_seconds_main_loop, -1)

    Logger.enabled = false
    make_scenery_non_interactable()
    reset_state()
    spawn_proxy_bases()
    spawn_all_dice()
    spawn_dead_zones()

    Wait.time(function ()
        Logger.enabled = true
    end, 1, 0)
end


function make_scenery_non_interactable()
    -- Main table
    getObjectFromGUID('4adbe6').interactable = false

    -- Chairs
    getObjectFromGUID('1d5cd6').interactable = false
    getObjectFromGUID('670e7b').interactable = false

    -- Floor
    getObjectFromGUID('7e8655').interactable = false

    -- Walls
    getObjectFromGUID('dda7c2').interactable = false
    getObjectFromGUID('2e8f62').interactable = false
    getObjectFromGUID('8f0e8b').interactable = false
    getObjectFromGUID('ba4bf6').interactable = false

    -- Main point light
    getObjectFromGUID('06f591').interactable = false

    -- Key light
    getObjectFromGUID('607c46').interactable = false

    -- Back lights
    getObjectFromGUID('8b3843').interactable = false
    getObjectFromGUID('78eb52').interactable = false

    -- Top light for shadows
    getObjectFromGUID('037fab').interactable = false

end

function update()
    check_picked_base()
end

function print_help()
    Logger.info('Write commands in the chat by writting !command.')
    Logger.info('A extended description can be found on the Notebook.')
    Logger.info('Available commands:')
    Logger.info('!dba_help: Print this help')
    Logger.info('!dba_print_state: Prints the current global vars of bases and table')
    Logger.info('!dba_reset: Recalculates the bases and tables using heuristics on the existing objects')
end

function onChat(message, player)
    if message == '!dba_help' then
        Logger.info(player.get_steam_name() .. ': ' .. message)
        print_help()
        return false
    end

    if message == '!dba_reset' then
        Logger.info(player.get_steam_name() .. ': ' .. message)
        Logger.important('Resetting the state of the board, check the chat')
        reset_state()
        return false
    end

    if message == '!dba_print_state' then
        Logger.info(player.get_steam_name() .. ': ' .. message)
        print_state()
        return false
    end

    if message == '!dba_debug' then
        Logger.info(player.get_steam_name() .. ': ' .. message)
        if Logger.debug_enabled then
            Logger.info('Disabling debug mode')
            Logger.debug_enabled = false
        else
            Logger.info('Enabling debug mode, will take effect in three seconds. Note, this will cause decreased performance.')
            Wait.time(function()
                Logger.debug_enabled = true
                Logger.info('Debug mode ON')
            end, 3)
        end
        return false
    end

    if message == '!dba_3dterrain' then
        Logger.info(player.get_steam_name() .. ': ' .. message)
        g_use_3d_terrain = true
        Logger.info('3D Terrain enabled, when doing a fix&lock on the table 3D objects will load.')
        return false
    end

    if message == '!dba_regen_dice' then
        Logger.info(player.get_steam_name() .. ': ' .. message)
        spawn_all_dice()
        return false
    end

    if message == '!dba_random_army' then
        Logger.info(player.get_steam_name() .. ': ' .. message)
        local _,book = random_kv(armies)
        local army_name, army = random_kv(book)

        Logger.important('Army selected: ' .. army_name .. '')
        Logger.info('List: ' .. army['data']['list'])
        Logger.info('Agressiveness: ' .. army['data']['aggresiveness']
            .. ' Terrain: ' .. army['data']['terrain'])
        return false
    end

    if str_starts_with(message, '!dba') then
        Logger.info(player.get_steam_name() .. ': ' .. message)
        Logger.error('Command not recognized. Please, use !dba_help')
    end
    return true
end

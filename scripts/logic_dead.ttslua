
function spawn_dead_zones()
    delete_all_dead_zones()
    Wait.frames(function()
        spawn_dead_zones_after_deletion()
    end, 1)
end

function delete_all_dead_zones()
    local all_objs = getAllObjects()
    for _,obj in ipairs(all_objs) do
        local name = obj.getName()
        if str_starts_with(name, 'dead zone') then
            -- This executes on next frame
            obj.destroy()
        end
    end
end

function create_zone(name, position, size)
    local zone_spawn = {
        position = position,
        scale = size,
        type = 'ScriptingTrigger',
        callback = 'callback_zone'
    }
    local obj = spawnObject(zone_spawn)
    obj.setName(name)
end

function spawn_dead_zones_after_deletion()
    create_zone('dead zone red',
                { x = 0, y = 1.6, z = -27 },
                { x = 10, y = 1, z = 10 })
    create_zone('dead zone blue',
                { x = 0, y = 1.6, z = 27 },
                { x = 10, y = 1, z = 10 })
end

local g_updating_zone = {}

function update_zone_value(zone)
    local name = zone.getName()
    local is_red = false
    if str_has_substr(name, 'red') then
        is_red = true
    end

    local dead = 0
    for _,obj in ipairs(zone.getObjects()) do
        log(obj)
        log('Name is <' .. obj.getName() .. '>')
        if str_has_substr(obj.getName(), 'base') then
            if not str_has_substr(obj.getName(), 'SCh') then
                dead = dead + 1
            end
        end
    end


    local text_id = 'text_dead_'
    local image_id = 'dead_'
    local image_suffix = ''
    if is_red then
        text_id = text_id .. 'red'
        image_id = image_id .. 'red'
        image_suffix = 'r'


    else
        text_id = text_id .. 'blue'
        image_id = image_id .. 'blue'
        image_suffix = 'b'
    end
    UI.setValue(text_id, dead)
    UI.hide(text_id)
    Wait.frames(function ()
        UI.show(text_id)
    end, 1)
    if dead == 0 then
        UI.setAttribute(image_id, 'image', 'skeleton0' .. image_suffix)
    elseif dead == 1 or dead == 2 then
        UI.setAttribute(image_id, 'image', 'skeleton1' .. image_suffix)
    elseif dead == 3 then
        UI.setAttribute(image_id, 'image', 'skeleton2' .. image_suffix)
    elseif dead == 4 then
        UI.setAttribute(image_id, 'image', 'skeleton3' .. image_suffix)
    else
        UI.setAttribute(image_id, 'image', 'skeleton4' .. image_suffix)
    end
    Logger.debug('Updated dead zone ' .. zone.getName())
    g_updating_zone[zone.getName()] = false
end

function callback_zone(zone, name, color)
    Logger.debug('Dead zone callback ' .. zone.getName())
    if not g_updating_zone[zone.getName()] then
        g_updating_zone[zone.getName()] = true
        Wait.frames(function ()
            update_zone_value(zone)
        end, 30)
    else
        Logger.debug('Ignoring dead callback because already updating')
    end
end

function onObjectEnterScriptingZone(zone, obj)
    if not str_has_substr(obj.getName(), 'base') then
        return 
    end
    Logger.debug(obj.getName() .. ' entered ' .. zone.getName())
    if not g_updating_zone[zone.getName()] then
        g_updating_zone[zone.getName()] = true
        Wait.frames(function() update_zone_value(zone) end, 60)
    else
        Logger.debug('Ignoring dead Enter because already updating')
    end
end

function onObjectLeaveScriptingZone(zone, obj)
    if not str_has_substr(obj.getName(), 'base') then
        return 
    end
    Logger.debug(obj.getName() .. ' left ' .. zone.getName())
    if not g_updating_zone[zone.getName()] then
        g_updating_zone[zone.getName()] = true
        Wait.frames(function() update_zone_value(zone) end, 60)
    else
        Logger.debug('Ignoring dead Leave because already updating')
    end
end